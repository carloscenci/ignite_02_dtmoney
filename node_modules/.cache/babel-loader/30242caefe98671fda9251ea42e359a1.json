{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documentos/Rocketseat/ignite/react/ignite_02_dtmoney/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider({\n  children\n}) {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transaction) {\n    await api.post('/transactions', transaction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/carlos/Documentos/Rocketseat/ignite/react/ignite_02_dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAgCA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAA0B,EAA1B,CAAzC;AAEP,OAAO,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAuE;AAAA;;AAC1E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACKC,IADL,CACUC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADrC;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeM,iBAAf,CAAiCC,WAAjC,EAA+D;AAC3D,UAAMX,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,WAA1B,CAAN;AACH;;AAED,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEP,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAArC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAjBeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState, ReactNode } from 'react'\nimport { api } from './services/api';\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n    createdAt: string;\n}\n\n// interface TransactionInput {\n//     title: string;\n//     amount: number;\n//     type: string;\n//     category: string;\n// }\n\n// type TransactionInput = Pick<Transaction, 'title' | 'amount' | 'type' | 'category'>\n\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\n\n\ninterface TransactionsProviderProps {\n    children: ReactNode;\n}\n\ninterface TransactionsContextData {\n    transactions: Transaction[];\n    createTransaction: (transaction: TransactionInput) => Promise<void>;\n}\n\nexport const TransactionsContext = createContext<TransactionsContextData>({} as TransactionsContextData);\n\nexport function TransactionsProvider({ children }: TransactionsProviderProps) {\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n    useEffect(() => {\n        api.get('transactions')\n            .then(response => setTransactions(response.data.transactions))\n    }, []);\n\n    async function createTransaction(transaction: TransactionInput){\n        await api.post('/transactions', transaction)\n    }\n\n    return (\n        <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n            {children}\n        </TransactionsContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}